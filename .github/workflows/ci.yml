name: CI

on:
  push:
    branches: [dev,main]
    paths:
      - "frontend/**"
      - "api/**"
      - "db/**"
  pull_request:
    branches: [dev,main]

jobs:
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - name: Install
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Prettier (format check)
        run: npm run format
      # - name: Test
      #   run: npm test -- --ci --watchAll=false --passWithNoTests
      - name: Build
        run: npm run build --if-present

  api:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: api/package-lock.json
      - name: Install
        run: npm ci
      - name: Test
        run: npm test
      - name: Build
        run: npm run build --if-present

  db:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: db
    steps:
      - uses: actions/checkout@v4
      - name: Show files
        run: |
          pwd
          ls -la
          test -f init.sql && echo "init.sql found ‚úÖ" || (echo "init.sql missing ‚ùå" && exit 1)
  codeql:
    name: CodeQL
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          queries: security-and-quality

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript"

          
  mock-deploy:
    runs-on: ubuntu-latest
    needs: [frontend, api, db]
    steps:
      - name: Mock Deploy (staging)
        run: |
          echo "üöÄ Mock-deploy startar‚Ä¶"
          echo "Skulle deploya artefakter/images som byggdes i f√∂reg√•ende jobb."
          echo "M√•lmilj√∂: staging (moln)."
          echo "‚úÖ Mock-deploy klar!"
